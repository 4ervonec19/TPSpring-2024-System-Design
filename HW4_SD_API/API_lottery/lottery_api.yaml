openapi: 3.0.0
info: 
  title: SteamLottery API
  description: API for Lottery System. Allows to get free or paid roulette game for user or friends company for playing or ownership.
  version: "1.0.0"
schemes:
  - https
  - http
securityDefinitions:
  ApiKeyAuth:
    type: apiKey
    in: header
    name: Authorization
security:
    - ApiKeyAuth: []
    
paths:
  /store.steamcommunity.com/profiles/{user_id}/friends/{friend_id}:
    get:
      summary: Get and Add selected friend to the Lobby
      parameters:
        - name: friend_id
          in: path
          description: Friend ID (friend_id) - found in the list of user's friends
          required: true
          schema:
            type: integer
            example: 20
        - name: user_id
          in: path
          description: User ID (user_id) used to go to friends
          required: true
          schema:
            type: integer
            example: 10
            
      responses:
        '200':
          description: Successful query with friends info feedback
          content:
            application/json:
              schema:
                type: object
                properties:
                  friends:
                    type: array
                    items:
                      type: object
                      properties:
                        notification_message:
                          type: string
                          example: "Successful added friends"
                        friend_name:
                          type: string
                          example: "4ervonec19"
                        friend_id:
                          type: integer
                          example: 20
                        friend_avatar:
                          type: array
                          items:
                            type: array
                            items:
                              type: object
                              properties:
                                pixel:
                                  type: number
                                  example: 0.2343
        '401':
          description: Not authorized user
          content:
            application/json:
              schema:
                type: object
                properties:
                  notofication_message:
                    type: string
                    example: "Not authorized user"
        '404':
            description: Friends Not Found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    notofication_message:
                      type: string
                      example: "Something wrong"
                      
  /store.steamcommunity.com/profiles/{user_id}/notifications:
    get:
      summary: Allows to get notifications about new invite suggestions
      parameters:
      - name: user_id
        in: path
        description: ID of User (user_id) to invite
        required: true
        schema:
          type: integer
          example: 20
      - name: inviter_id
        in: query
        description: ID of User who invites
        required: true
        schema:
          type: integer
          example: 10
            
      responses:
        '200':
          description: Successful invitation query 
          content:
            application/json:
              schema:
                type: object
                properties:
                  notification_message:
                    type: string
                    example: "User 4ervonec19 invites you to lottery"
        '401':
          description: Not authorized user
          content:
            application/json:
              schema:
                type: object
                properties:
                  notofication_message:
                    type: string
                    example: "Not authorized user"
        '404':
            description: User to invite Not Found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    notofication_message:
                      type: string
                      example: "Something wrong"
  
  /store.steamcommunity.com/profiles/{friend_id}/lobbyinvite/{lobby_id}:
    post:
      summary: Allows to get success message to inviter
      parameters:
      - name: friend_id
        in: path
        description: ID of User (user_id) to invite
        required: true
        schema:
          type: integer
          example: 20
      - name: lobby_id
        in: path
        description: ID of lobby to invate in
        required: true
        schema:
          type: integer
          example: 21
      responses:
        '200':
          description: Successfully sent notification
          content:
            application/json:
              schema:
                type: object
                properties:
                    message:
                      type: string
                      example: "Notification sent to User"
        '201':
          description: User accepted your invite
          content:
            application/json:
              schema:
                type: object
                properties:
                    message:
                      type: string
                      example: "User accepted notification"
                    friend_id:
                      type: integer
                      example: 20
        
        '401':
          description: Not authorized user
          content:
            application/json:
              schema:
                type: object
                properties:
                  notofication_message:
                    type: string
                    example: "Not authorized user"
        '404':
            description: User to invite Not Found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    notofication_message:
                      type: string
                      example: "Something wrong"
  
  /store.steamcommunity.com/lottery/lobby/{lobby_id}/users/post:
    post:
      summary: Allows to write new user fields
      parameters:
      - name: lobby_id
        in: path
        description: lobby's ID to fill in
        required: true
        schema:
          type: integer
          example: 21
          
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                properties:
                  user_name:
                    type: string
                    example: "4ervonec19"
                  user_id:
                    type: integer
                    example: 20
      responses:
        '200':
          description: Successfully added user
          content:
            application/json:
              schema:
                type: object
                properties:
                    message:
                      type: string
                      example: "Successfully added user"
                      
        '401':
          description: Not authorized user
          content:
            application/json:
              schema:
                type: object
                properties:
                  notofication_message:
                    type: string
                    example: "Not authorized user"
        '404':
            description: User Not Found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    notofication_message:
                      type: string
                      example: "Something wrong"
                      
  /store.steamcommunity.com/lottery/lobby/{lobby_id}/users/delete:
    delete:
      summary: Delete friends who hasn't accepted invitation
      parameters:
        - name: lobby_id
          in: path
          description: Lobby's ID to delete users from
          required: true
          schema:
            type: integer
            example: 30
        - name: user_id
          in: query
          description: User's to delete ID
          required: true
          schema:
            type: integer
            example: 13
          
      responses:
          '200':
            description: Successfully deleted user
            content:
              application/json:
                schema:
                  type: object
                  properties:
                      message:
                        type: string
                        example: "Successfully deleted user"
          '401':
            description: Not authorized user
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    notofication_message:
                      type: string
                      example: "Not authorized user"
          '404':
              description: User to invite Not Found
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      notofication_message:
                        type: string
                        example: "Something wrong"
                        
  /store.steamcommunity.com/profiles/{user_id}/games:
    get:
      summary: Allows to get games from each user's library
      parameters:
      - name: user_id
        in: path
        description: User ID to get games from library
        required: true
        schema:
          type: integer
          example: 20
    
      responses:
            '200':
              description: Successfully acquired games
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                        message:
                          type: string
                          example: "Successfully added games"
                        games:
                          type: array
                          items:
                            type: object
                            properties:
                              game_id:
                                type: integer
                                example: 15
                              game_name:
                                type: string
                                example: 'CS:GO'
                            
            '401':
              description: Not authorized user
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      notofication_message:
                        type: string
                        example: "Not authorized user"
            '404':
                description: User / Game Not Found
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        notofication_message:
                          type: string
                          example: "Something wrong"
  
  /store.steampowered.com/content/getcontentdata:
    get:
      summary: Allows to get games from market using filtering
      parameters:
      - name: hubtype
        in: query
        description: Market's field
        required: true
        schema:
          type: string
          example: "demos"
      - name: genre
        in: query
        description: Game's genre
        required: true
        schema:
          type: string
          example: "fantasy"
      - name: price_max
        in: query
        description: Game's price max
        required: true
        schema:
          type: number
          example: 2000
  
      responses:
            '200':
              description: Successfully acquired games
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                        message:
                          type: string
                          example: "Successfully added games"
                        games:
                          type: array
                          items:
                            type: object
                            properties:
                              game_id:
                                type: integer
                                example: 15
                              game_name:
                                type: string
                                example: 'CS:GO'
                              game_price:
                                type: number
                                example: 2000
                            
            '401':
              description: Not authorized user
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      notofication_message:
                        type: string
                        example: "Not authorized user"
            '404':
                description: User / Game Not Found
                content:
                  application/json:
                    schema:
                      type: object
                      properties:
                        notofication_message:
                          type: string
                          example: "Something wrong"
  
  /store.steamcommunity.com/lottery/lobby/{lobby_id}/games/post:
    post:
      summary: Allows to write new game fields
      parameters:
      - name: lobby_id
        in: path
        description: lobby's ID to fill in
        required: true
        schema:
          type: integer
          example: 21
          
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                properties:
                  game_name:
                    type: string
                    example: "CS:GO"
                  game_id:
                    type: integer
                    example: 15
      responses:
        '200':
          description: Successfully added user
          content:
            application/json:
              schema:
                type: object
                properties:
                    message:
                      type: string
                      example: "Successfully added games"
                      
        '401':
          description: Not authorized user
          content:
            application/json:
              schema:
                type: object
                properties:
                  notofication_message:
                    type: string
                    example: "Not authorized user"
        '404':
            description: User / Game Not Found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    notofication_message:
                      type: string
                      example: "Something wrong"
  
  /store.steamcommunity.com/lottery/lobby/{lobby_id}/games:
    get:
      summary: Allows to get games from Games-Pool
      parameters:
      - name: lobby_id
        in: path
        description: Lobby's id
        required: true
        schema:
          type: integer
          example: 15
      
      responses:
        '200':
          description: Successfully acquired games
          content:
            application/json:
              schema:
                type: object
                properties:
                    message:
                      type: string
                      example: "Successfully acquired games"
                    games:
                      type: array
                      items:
                        type: object
                        properties:
                          game_id:
                            type: integer
                            example: 15
                          game_name:
                            type: string
                            example: 'CS:GO'
                          game_price:
                            type: number
                            example: 2000
                          
        '401':
            description: Not authorized user
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    notofication_message:
                      type: string
                      example: "Not authorized user"
        '404':
              description: User / Game Not Found
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      notofication_message:
                        type: string
                        example: "Something wrong"
  
  /store.steamcommunity.com/lottery/lobby/{lobby_id}/users:
    get:
      summary: Allows to get users from the lobby
      parameters:
      - name: lobby_id
        in: path
        description: Lobby's id
        required: true
        schema:
          type: integer
          example: 15
      
      responses:
        '200':
          description: Successfully acquired users
          content:
            application/json:
              schema:
                type: object
                properties:
                    message:
                      type: string
                      example: "Successfully acquired users"
                    games:
                      type: array
                      items:
                        type: object
                        properties:
                          user_id:
                            type: integer
                            example: 10
                          user_name:
                            type: string
                            example: '4ervonec19'
                          
        '401':
            description: Not authorized user
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    notofication_message:
                      type: string
                      example: "Not authorized user"
        '404':
              description: User Not Found
              content:
                application/json:
                  schema:
                    type: object
                    properties:
                      notofication_message:
                        type: string
                        example: "Something wrong"
  
  /store.steamcommunity.com/lottery/lobby/{lobby_id}/price/post:
    post:
      summary: Allows to fill games config price
      parameters:
      - name: lobby_id
        in: path
        description: Lobby's id
        required: true
        schema:
          type: integer
          example: 15
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                properties:
                  config_id:
                    type: integer
                    example: 121
                  config_price:
                    type: number
                    example: 2500
      responses:
        '200':
          description: Successfully added total price
          content:
            application/json:
              schema:
                type: object
                properties:
                    message:
                      type: string
                      example: "Successfully added total price"
                      
        '401':
          description: Not authorized user
          content:
            application/json:
              schema:
                type: object
                properties:
                  notofication_message:
                    type: string
                    example: "Not authorized user"
        '404':
            description: Price Not Found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    notofication_message:
                      type: string
                      example: "Something wrong"
  
  /store.steamcommunity.com/lottery/lobby/{lobby_id}/price:
    get:
      summary: Allows to get games config price
      parameters:
      - name: lobby_id
        in: path
        description: Lobby's id
        required: true
        schema:
          type: integer
          example: 15
          
      responses:
        '200':
          description: Successfully acquired total price
          content:
            application/json:
              schema:
                type: object
                properties:
                    message:
                      type: string
                      example: "Successfully acquired total price"
                    config_price:
                      type: number
                      example: 2500
                      
        '401':
          description: Not authorized user
          content:
            application/json:
              schema:
                type: object
                properties:
                  notofication_message:
                    type: string
                    example: "Not authorized user"
        '404':
            description: Price Not Found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    notofication_message:
                      type: string
                      example: "Something wrong"
      
  
  /checkout.steampowered.com/{user_id}/checkout/post:
    post:
      summary: Allows to transfer to payment system
      parameters:
      - name: user_id
        required: true
        in: path
        description: User_id to go to the checkout
        schema:
          type: integer
          example: 15
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                properties:
                  card_name:
                    type: number
                    example: 0000 0000 0000 0000
                  cvv_code:
                    type: number
                    example: 000
                  card_owner: 
                    type: string
                    example: "NAME SURNAME"
                  payment_system:
                    type: string
                    example: "MasterCard"
        
        
      responses:
        '200':
          description: Returns phone/email-code
          content:
            application/json:
              schema:
                type: object
                properties:
                    message:
                      type: integer
                      example: "Returned code"
                    pass_code:
                      type: number
                      example: 1396
                      
        '401':
          description: Not authorized user
          content:
            application/json:
              schema:
                type: object
                properties:
                  notofication_message:
                    type: string
                    example: "Not authorized user"
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    notofication_message:
                      type: string
                      example: "Something wrong"
                      
  /checkout.steampowered.com/{user_id}/checkout/pay:
    post:
      summary: Allows to enter the code
      parameters:
      - name: user_id
        required: true
        in: path
        description: User_id to go to the checkout system
        schema:
          type: integer
          example: 15
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                properties:
                  pass_code:
                    type: integer
                    example: 1396
       
      responses:
        '201':
          description: Returns transaction success flag
          content:
            application/json:
              schema:
                type: object
                properties:
                    message:
                      type: string
                      example: "Transaction committed"
                      
        '401':
          description: Not authorized user
          content:
            application/json:
              schema:
                type: object
                properties:
                  notofication_message:
                    type: string
                    example: "Not authorized user"
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    notofication_message:
                      type: string
                      example: "Something wrong"
                    
  /checkout.steampowered.com/{user_id}/checkout:
    get:
      summary: Allows to get info about transaction status
      parameters:
      - name: user_id
        required: true
        in: path
        description: User_id to get payment status
        schema:
          type: integer
          example: 15
      
      responses:
        '200':
          description: Returns info about payment status 
          content:
            application/json:
              schema:
                type: object
                properties:
                    message:
                      type: string
                      example: "Succesful transaction"
                      
        '401':
          description: Not authorized user
          content:
            application/json:
              schema:
                type: object
                properties:
                  notofication_message:
                    type: string
                    example: "Not authorized user"
        '404':
            description: Not Found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    notofication_message:
                      type: string
                      example: "Something wrong"
      
      
  /store.steamcommunity.com/lottery/lobby/{lobby_id}/spin:
    get:
      summary: Allows to spin the lottery to acquire games
      parameters:
      - name: lobby_id
        required: true
        in: path
        description: lobby_id to return the win
        schema:
          type: integer
          example: 15
      
      responses:
        '200':
          description: Returnes won game id
          content:
            application/json:
              schema:
                type: object
                properties:
                    message:
                      type: string
                      example: "Succesful win"
                    games_id:
                      type: integer
                      example: 570
        '401':
          description: Not authorized user
          content:
            application/json:
              schema:
                type: object
                properties:
                  notofication_message:
                    type: string
                    example: "Not authorized user"
        '404':
            description: Game Not Found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    notofication_message:
                      type: string
                      example: "Something wrong"
    
  /store.steamcommunity.com/profiles/{user_id}/games/post:
    post:
      summary: Allows to add new games in library of users
      parameters:
      - name: user_id
        required: true
        in: path
        description: user_id to add winning games
        schema:
          type: integer
          example: 15
          
      requestBody:
        required: true
        content:
            application/json:
              schema:
                type: object
                properties:
                  game_id:
                    type: integer
                    example: 570
      
      responses:
        '200':
          description: Successful added
          content:
            application/json:
              schema:
                type: object
                properties:
                    message:
                      type: string
                      example: "Succesfully added game"
  
        '401':
          description: Not authorized user
          content:
            application/json:
              schema:
                type: object
                properties:
                  notofication_message:
                    type: string
                    example: "Not authorized user"
        '404':
            description: Game Not Found
            content:
              application/json:
                schema:
                  type: object
                  properties:
                    notofication_message:
                      type: string
                      example: "Something wrong"  
                      
  
          
      
    
                            
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
                        
        